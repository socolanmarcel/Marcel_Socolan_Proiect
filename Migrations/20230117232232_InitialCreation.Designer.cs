// <auto-generated />
using System;
using Marcel_Socolan_Proiect.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Marcel_Socolan_Proiect.Migrations
{
    [DbContext(typeof(ApplicationContext))]
    [Migration("20230117232232_InitialCreation")]
    partial class InitialCreation
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "6.0.13");

            modelBuilder.Entity("Marcel_Socolan_Proiect.Models.Conductor", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("EmployeeCode")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("WorkingHoursPerDay")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.ToTable("Conductors");
                });

            modelBuilder.Entity("Marcel_Socolan_Proiect.Models.Passenger", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<int>("Age")
                        .HasColumnType("INTEGER");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("IdentityCode")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<Guid?>("RouteId")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("RouteId");

                    b.ToTable("Passengers");
                });

            modelBuilder.Entity("Marcel_Socolan_Proiect.Models.Route", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("ArrivalTime")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("DepartureTime")
                        .HasColumnType("TEXT");

                    b.Property<int?>("TrainId")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("TrainId");

                    b.ToTable("Routes");
                });

            modelBuilder.Entity("Marcel_Socolan_Proiect.Models.Train", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<long>("Capacity")
                        .HasColumnType("INTEGER");

                    b.Property<Guid>("ResponsibleConductorId")
                        .HasColumnType("TEXT");

                    b.Property<int>("Speed")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("ResponsibleConductorId");

                    b.ToTable("Trains");
                });

            modelBuilder.Entity("Marcel_Socolan_Proiect.Models.Passenger", b =>
                {
                    b.HasOne("Marcel_Socolan_Proiect.Models.Route", null)
                        .WithMany("Passengers")
                        .HasForeignKey("RouteId");
                });

            modelBuilder.Entity("Marcel_Socolan_Proiect.Models.Route", b =>
                {
                    b.HasOne("Marcel_Socolan_Proiect.Models.Train", null)
                        .WithMany("Routes")
                        .HasForeignKey("TrainId");
                });

            modelBuilder.Entity("Marcel_Socolan_Proiect.Models.Train", b =>
                {
                    b.HasOne("Marcel_Socolan_Proiect.Models.Conductor", "ResponsibleConductor")
                        .WithMany()
                        .HasForeignKey("ResponsibleConductorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ResponsibleConductor");
                });

            modelBuilder.Entity("Marcel_Socolan_Proiect.Models.Route", b =>
                {
                    b.Navigation("Passengers");
                });

            modelBuilder.Entity("Marcel_Socolan_Proiect.Models.Train", b =>
                {
                    b.Navigation("Routes");
                });
#pragma warning restore 612, 618
        }
    }
}
