// <auto-generated />
using System;
using Marcel_Socolan_Proiect.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Marcel_Socolan_Proiect.Migrations
{
    [DbContext(typeof(ApplicationContext))]
    [Migration("20230118191614_CreatModelUser")]
    partial class CreatModelUser
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "6.0.13");

            modelBuilder.Entity("Marcel_Socolan_Proiect.Models.Conductor", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("EmployeeCode")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("WorkingHoursPerDay")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.ToTable("Conductors");

                    b.HasData(
                        new
                        {
                            Id = new Guid("c46a393d-daff-464f-8cb8-04cb8653f7c7"),
                            Address = "O adresa",
                            EmployeeCode = "1234",
                            FirstName = "Ion",
                            LastName = "Ionescu",
                            WorkingHoursPerDay = 8
                        },
                        new
                        {
                            Id = new Guid("69d6f1b7-2864-4d24-a7e2-4ed3eec972b7"),
                            Address = "Alta adresa",
                            EmployeeCode = "4321",
                            FirstName = "Mihai",
                            LastName = "Mihailescu",
                            WorkingHoursPerDay = 7
                        });
                });

            modelBuilder.Entity("Marcel_Socolan_Proiect.Models.Passenger", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<int>("Age")
                        .HasColumnType("INTEGER");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("IdentityCode")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<Guid?>("RouteId")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("RouteId");

                    b.ToTable("Passengers");

                    b.HasData(
                        new
                        {
                            Id = new Guid("3da33c62-67e4-4764-9a7e-6ce322b92b92"),
                            Age = 25,
                            FirstName = "Pasager",
                            IdentityCode = "B1234",
                            LastName = "1"
                        },
                        new
                        {
                            Id = new Guid("98d9b24e-f89c-4a22-bb7f-2ba26a896bbf"),
                            Age = 31,
                            FirstName = "Pasager",
                            IdentityCode = "B4321",
                            LastName = "2"
                        });
                });

            modelBuilder.Entity("Marcel_Socolan_Proiect.Models.Route", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("ArrivalTime")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("DepartureTime")
                        .HasColumnType("TEXT");

                    b.Property<int?>("TrainId")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("TrainId");

                    b.ToTable("Routes");
                });

            modelBuilder.Entity("Marcel_Socolan_Proiect.Models.Train", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<long>("Capacity")
                        .HasColumnType("INTEGER");

                    b.Property<Guid>("ResponsibleConductorId")
                        .HasColumnType("TEXT");

                    b.Property<int>("Speed")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("ResponsibleConductorId");

                    b.ToTable("Trains");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Capacity = 75L,
                            ResponsibleConductorId = new Guid("c46a393d-daff-464f-8cb8-04cb8653f7c7"),
                            Speed = 120
                        },
                        new
                        {
                            Id = 2,
                            Capacity = 60L,
                            ResponsibleConductorId = new Guid("69d6f1b7-2864-4d24-a7e2-4ed3eec972b7"),
                            Speed = 115
                        });
                });

            modelBuilder.Entity("Marcel_Socolan_Proiect.Models.UserModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Role")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Password = "a1234",
                            Role = "admin",
                            Username = "admin1"
                        },
                        new
                        {
                            Id = 2,
                            Password = "a1234",
                            Role = "admin",
                            Username = "admin2"
                        },
                        new
                        {
                            Id = 3,
                            Password = "u1234",
                            Role = "user",
                            Username = "utilizator1"
                        },
                        new
                        {
                            Id = 4,
                            Password = "u1234",
                            Role = "user",
                            Username = "utilizator2"
                        });
                });

            modelBuilder.Entity("Marcel_Socolan_Proiect.Models.Passenger", b =>
                {
                    b.HasOne("Marcel_Socolan_Proiect.Models.Route", null)
                        .WithMany("Passengers")
                        .HasForeignKey("RouteId");
                });

            modelBuilder.Entity("Marcel_Socolan_Proiect.Models.Route", b =>
                {
                    b.HasOne("Marcel_Socolan_Proiect.Models.Train", null)
                        .WithMany("Routes")
                        .HasForeignKey("TrainId");
                });

            modelBuilder.Entity("Marcel_Socolan_Proiect.Models.Train", b =>
                {
                    b.HasOne("Marcel_Socolan_Proiect.Models.Conductor", "ResponsibleConductor")
                        .WithMany()
                        .HasForeignKey("ResponsibleConductorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ResponsibleConductor");
                });

            modelBuilder.Entity("Marcel_Socolan_Proiect.Models.Route", b =>
                {
                    b.Navigation("Passengers");
                });

            modelBuilder.Entity("Marcel_Socolan_Proiect.Models.Train", b =>
                {
                    b.Navigation("Routes");
                });
#pragma warning restore 612, 618
        }
    }
}
